plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.graalvm.buildtools.native' version '0.10.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudAzureVersion', "5.20.1")
    set('springShellVersion', "3.4.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.azure.spring:spring-cloud-azure-starter-keyvault'
    implementation 'org.springframework.shell:spring-shell-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.shell:spring-shell-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.shell:spring-shell-dependencies:${springShellVersion}"
        mavenBom "com.azure.spring:spring-cloud-azure-dependencies:${springCloudAzureVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

bootRun {
    systemProperty('java.security.properties', file('src/main/resources/custom.security').absolutePath)
    systemProperty('spring.aot.enabled', 'true')
}

graalvmNative {
    metadataRepository {
        enabled = true
    }
    binaries {
        main {
            buildArgs.add("-Djava.security.properties=${file('src/main/resources/custom.security').absolutePath}")
            buildArgs.add('--initialize-at-build-time=org.slf4j.helpers')
        }
    }
}
